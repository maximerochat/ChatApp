{"version":3,"sources":["containers/Home.js","actions/auth.js","actions/types.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","components/Navbar.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","containers/Chat.js","actions/queries.js","components/Discussion.js","components/Message.js","utils/utils.js","components/Chat.js","containers/Chat2.js","components/AudioRecorder.js","containers/CallPage.js","App.js","index.js"],"names":["connect","state","isAuthenticated","auth","username","user","first_name","_ref","React","createElement","className","Link","to","role","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","load_user","_asyncToGenerator","_callee","dispatch","config","res","_context","localStorage","getItem","headers","Content-Type","Authorization","concat","Accept","axios","get","process","payload","data","t0","_x","apply","arguments","verify","uid","token","_ref8","_callee8","body","_context8","JSON","stringify","post","_x8","login","email","password","_ref4","_callee4","_context4","_x4","_useState","useState","_useState2","_slicedToArray","formData","setFormData","onChange","e","_objectSpread","_defineProperty","target","continueWithGoogle","_ref2","window","location","replace","authorization_url","Navigate","onSubmit","preventDefault","placeholder","required","minLength","onClick","signup","last_name","re_password","_ref7","_callee7","_context7","_x7","accountCreated","setAccountCreated","_useState3","_useState4","verified","setVerified","_useParams","useParams","style","marginTop","reset_password","_ref5","_callee5","_context5","_x5","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","_ref6","_callee6","_context6","_x6","match","logout","_ref9","_callee9","_context9","_x9","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Fragment","checkAuthenticated","_ref3","_callee3","_context3","code","_x3","googleAuthenticate","_callee2","details","formBody","_context2","map","encodeURIComponent","join","_x2","props","useLocation","useEffect","params","URLSearchParams","search","Navbar","children","initialState","access","refresh","combineReducers","action","setItem","removeItem","middelware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","socket","setSocket","setUsername","_useState5","_useState6","message","setMessage","_useState7","_useState8","messages","setMessages","storedUsername","input","prompt","request","newSocket","WebSocket","close","onmessage","event","parse","prevMessages","_toConsumableArray","index","timestamp","send","create_new_conv","other_username","FormData","append","fetch_conv","known_conv","set","conversations","c","find","c2","conv_id","indexOf","splice","get_auto_complete","query","username_list","remove_conv","get_messages","Discussion","selected","receiverName","timeStamp","zIndex","position","stopPropagation","onDelete","aria-hidden","lastMessageText","Message","blue","content","formatDate","inputDate","date1","date2","currentDate","Date","date","getFullYear","getMonth","getDate","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","formatTime","isSameMonth","day","month","toLocaleString","formatDateAndMonth","year","formatDateMonthYear","getHour","Chat","fetch_messages","messages_received","m","receivers","console","log","src","alt","setConversations","setQuery","suggestions","setSuggestions","selectedConv","setSelectedConv","fetchAutocompleteSuggestions","sugge","onDiscClick","newConvEvent","temp_conv","deleteConv","interval","setInterval","clearInterval","d","lastMessage","data-bs-toggle","data-bs-target","class","tabindex","aria-labelledby","data-bs-dismiss","htmlFor","suggestion","handleSuggestionClick","audioRecorder","audioBlobs","mediaRecorder","streamBeingCaptured","start","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","addEventListener","mimeType","audioBlob","Blob","cancel","stopStream","resetRecordingProperties","getTracks","track","audioRecordStartTime","microphoneButton","document","getElementsByClassName","recordingControlButtonsContainer","stopRecordingButton","cancelRecordingButton","elapsedTimeTag","closeBrowserNotSupportedBoxButton","overlay","audioElement","audioElementSource","getElementsByTagName","textIndicatorOfAudiPlaying","handleHidingRecordingControlButtons","display","classList","add","elapsedTimeTimer","hideTextIndicatorOfAudioPlaying","onclick","recorderAudioIsPlaying","paused","pause","remove","displayElapsedTimeDuringAudioRecording","elapsedTime","startTime","timeDiff","Math","floor","totalHours","computeElapsedTime","includes","stopAudioRecording","onended","maximumRecordingTimeInHours","audioAsblob","recorderAudioAsBlob","reader","FileReader","onload","base64URL","sourceElement","appendChild","createSourceForAudioElement","BlobType","substr","load","play","readAsDataURL","playAudio","innerHTML","elapsedTimeSplitted","split","maximumRecordingTimeInHoursAsString","elapsedTimeReachedMaximumNumberOfHours","controls","App","Provider","Router","Layout","Routes","Route","path","element","Home","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","Chat2","CallPage","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e6d4d763.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Home = ({isAuthenticated}) => (\r\n    <div className=\"container\">\r\n        <div className=\"jumbotron\">\r\n            <h1 className=\"display-4\">Welcom to my chat app</h1>\r\n            <p className=\"lead\">This is a super app that will allow users to have chat in real-time</p>\r\n            <hr className=\"my-4\" />\r\n            {isAuthenticated ?\r\n                <div>\r\n                    <p>Click the button to start conversations</p>\r\n                    <p className=\"lead\">\r\n                        <Link className=\"btn btn-primary btn-lg\" to=\"/chat2\" role=\"button\">Chat Now</Link>\r\n                    </p>\r\n                </div>\r\n                :\r\n                <div>\r\n                <p>Click the button to login</p>\r\n                    <p className=\"lead\">\r\n                        <Link className=\"btn btn-primary btn-lg\" to=\"/login\" role=\"button\">login</Link>\r\n                    </p>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    username: state.auth.user ? state.auth.user.first_name : null\r\n});\r\nexport default connect(mapStateToProps, {})(Home);","import axios from \"axios\";\r\nimport {LOGIN_SUCCESS,\r\n    LOGIN_FAILED,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAILED,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAILED,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    LOGOUT\r\n} from \"./types\";\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem(\"access\")){\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `JWT ${localStorage.getItem(\"access\")}`,\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const googleAuthenticate = (state, code) => async dispatch => {\r\n\r\n    if (state && code && !(localStorage.getItem(\"access\") && localStorage.getItem(\"refresh\"))) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n            }\r\n        };\r\n        const details = {\r\n            \"state\": state,\r\n            \"code\": code\r\n        };\r\n\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' +\r\n            encodeURIComponent(details[key])).join(\"&\");\r\n\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`,formBody, config);\r\n\r\n            // const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/`, formData, config);\r\n\r\n\r\n            dispatch({\r\n               type: GOOGLE_AUTH_SUCCESS,\r\n               payload: res.data\r\n            });\r\n            dispatch(load_user())\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GOOGLE_AUTH_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem(\"access\")) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n        const body = JSON.stringify({\r\n            token: localStorage.getItem(\"access\")\r\n        });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({email, password});\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\r\n            body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAILED\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\r\n            body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n} ;\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\r\n            body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`,\r\n            body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n\r\n        dispatch({\r\n            type: SIGNUP_FAILED\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    const body = JSON.stringify({ uid, token });\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`,\r\n            body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS\r\n        });\r\n    } catch (err) {\r\n\r\n        dispatch({\r\n            type: ACTIVATION_FAILED\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  dispatch({\r\n      type: LOGOUT\r\n  });\r\n};","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILED = \"SIGNUP_FAILED\";\r\nexport const ACTIVATION_SUCCESS = \"ACTIVATION_SUCCESS\";\r\nexport const ACTIVATION_FAILED = \"ACTIVATION_FAILED\";\r\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\r\nexport const USER_LOADED_FAIL = \"USER_LOADED_FAILED\";\r\nexport const AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\";\r\nexport const AUTHENTICATED_FAIL = \"AUTHENTICATED_FAILED\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\r\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const {email, password} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      login(email, password);\r\n    };\r\n\r\n    const continueWithGoogle = async () => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=https://maximerochat.ch/chat_app`);\r\n            window.location.replace(res.data.authorization_url);\r\n        } catch (e) {\r\n\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Navigate replace to=\"chat_app/\" />\r\n    }\r\n\r\n    return (\r\n      <div className=\"container mt-5\">\r\n          <h1>Sign In</h1>\r\n          <p>Sign into your account</p>\r\n          <form onSubmit={e => {onSubmit(e)}}>\r\n              <div className=\"form-group\">\r\n                  <input type=\"email\"\r\n                    className=\"form-control\"\r\n                         placeholder=\"Email\"\r\n                         name=\"email\"\r\n                         value={email}\r\n                         onChange={e => onChange(e)}\r\n                         required\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <input type=\"password\"\r\n                         className=\"form-control\"\r\n                         placeholder=\"Password\"\r\n                         name=\"password\"\r\n                         value={password}\r\n                         onChange={e => onChange(e)}\r\n                         minLength=\"6\"\r\n                         required\r\n                  />\r\n              </div>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Login</button>\r\n          </form>\r\n          <button className=\"btn btn-danger mt-3\" onClick={continueWithGoogle} >\r\n              Continue With Google\r\n          </button>\r\n          <p className=\"mt-3\">\r\n              Don't have an account <Link to=\"/chat_app/signup\">Sign Up</Link>\r\n          </p>\r\n          <p className=\"mt-3\">\r\n              Forgot your password ? <Link to=\"/chat_app/reset-password\">Reset Password</Link>\r\n          </p>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login  })(Login);","import React, { useState } from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {signup} from \"../actions/auth\";\r\nimport axios from \"axios\";\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        re_password: \"\"\r\n    });\r\n\r\n    const {first_name, last_name ,email, password , re_password} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (password === re_password) {\r\n            signup(first_name, last_name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    const continueWithGoogle = async () => {\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=https://maximerochat.ch/chat_app`);\r\n            window.location.replace(res.data.authorization_url);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    if (isAuthenticated) {\r\n        return <Navigate replace to=\"/chat_app/\" />\r\n    }\r\n    if (accountCreated) {\r\n        return <Navigate replace to=\"/chat_app/login\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Sign Up</h1>\r\n            <p>Create your account</p>\r\n            <form onSubmit={e => {onSubmit(e)}}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"First Name*\"\r\n                           name=\"first_name\"\r\n                           value={first_name}\r\n                           onChange={e => onChange(e)}\r\n                           required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"Last Name*\"\r\n                           name=\"last_name\"\r\n                           value={last_name}\r\n                           onChange={e => onChange(e)}\r\n                           required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"Email*\"\r\n                           name=\"email\"\r\n                           value={email}\r\n                           onChange={e => onChange(e)}\r\n                           required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"Password*\"\r\n                           name=\"password\"\r\n                           value={password}\r\n                           onChange={e => onChange(e)}\r\n                           minLength=\"6\"\r\n                           required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"Confirm Password*\"\r\n                           name=\"re_password\"\r\n                           value={re_password}\r\n                           onChange={e => onChange(e)}\r\n                           minLength=\"6\"\r\n                           required\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-primary\" type=\"submit\">Sign Up</button>\r\n            </form>\r\n            <button className=\"btn btn-danger mt-3\" onClick={continueWithGoogle} >\r\n                Continue With Google\r\n            </button>\r\n            <p className=\"mt-3\">\r\n                Already have an account ? <Link to=\"/login\">Sign In</Link>\r\n            </p>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from \"react\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { verify } from \"../actions/auth\";\r\n\r\nconst Activate = ({ verify }) => {\r\n    const [verified, setVerified] = useState(false);\r\n    const {uid, token} = useParams();\r\n    const verify_account = e => {\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified) {\r\n        return <Navigate replace to=\"/chat_app\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n           <div\r\n               className=\"d-flex flex-column justify-content-center align-items-center \"\r\n               style={{marginTop: '200px'}}\r\n           >\r\n               <h1>Verify your Account</h1>\r\n               <button\r\n               onClick={verify_account}\r\n               style={{marginTop: '50px'}}\r\n               type=\"button\"\r\n               className=\"btn btn-primary\"\r\n               >\r\n                   Verify\r\n               </button>\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { verify  })(Activate);","import React, { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password } from \"../actions/auth\";\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        email: \"\"\r\n    });\r\n\r\n    const {email} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Navigate replace to=\"/chat_app/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Request Password Reset</h1>\r\n            <p>You can reset the password of your account</p>\r\n            <form onSubmit={e => {onSubmit(e)}}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"Email\"\r\n                           name=\"email\"\r\n                           value={email}\r\n                           onChange={e => onChange(e)}\r\n                           required\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-primary\" type=\"submit\">Reset Password</button>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { reset_password  })(ResetPassword);","import React, { useState } from \"react\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        new_password: \"\",\r\n        re_new_password: \"\"\r\n    });\r\n\r\n    const {new_password, re_new_password} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\r\n    const { uid, token } = useParams();\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Navigate replace to=\"/chat_app/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Request Password Reset</h1>\r\n\r\n            <form onSubmit={e => {onSubmit(e)}}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"New Password\"\r\n                           name=\"new_password\"\r\n                           value={new_password}\r\n                           minLength=\"6\"\r\n                           onChange={e => onChange(e)}\r\n                           required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"Confirm New Password\"\r\n                           name=\"re_new_password\"\r\n                           value={re_new_password}\r\n                           minLength=\"6\"\r\n                           onChange={e => onChange(e)}\r\n                           required\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-primary\" type=\"submit\">Reset Password</button>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { reset_password_confirm  })(ResetPasswordConfirm);","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {logout} from \"../actions/auth\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/chat_app/login\">Login</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/chat_app/signup\">Sign Up</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = () => (\r\n        <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#!\" onClick={logout}>Logout</a>\r\n        </li>\r\n    );\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/chat_app/\">Chat App</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/chat_app/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        {isAuthenticated ? authLinks() : guestLinks()}\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/chat_app/chat2\">Conversations</Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/chat_app/call\">Call</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n   isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);","import React, { useEffect } from \"react\";\r\nimport Navbar from \"../components/Navbar\"\r\nimport {connect} from \"react-redux\";\r\nimport {checkAuthenticated, load_user, googleAuthenticate } from \"../actions/auth\";\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\n\r\nconst Layout = (props) => {\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n\r\n        const params = new URLSearchParams(location.search);\r\n        const state = params.get(\"state\") ? params.get(\"state\") : null;\r\n        const code = params.get(\"code\") ? params.get(\"code\") : null;\r\n\r\n        if (state && code && !(localStorage.getItem(\"access\") && localStorage.getItem(\"refresh\"))) {\r\n            props.googleAuthenticate(state, code);\r\n        } else {\r\n            props.checkAuthenticated();\r\n            props.load_user();\r\n        }\r\n    }, [location]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default connect(null, {checkAuthenticated, load_user, googleAuthenticate})(Layout);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILED,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_FAILED,\r\n    SIGNUP_SUCCESS,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAILED,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    LOGOUT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem(\"access\"),\r\n    refresh: localStorage.getItem(\"refresh\"),\r\n    isAuthenticated: null,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem(\"access\", payload.access);\r\n            return {\r\n                ...state, isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case GOOGLE_AUTH_SUCCESS:\r\n            localStorage.setItem(\"access\", payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case GOOGLE_AUTH_FAIL:\r\n            if (localStorage.getItem(\"access\") && localStorage.getItem(\"refresh\"))\r\n                return ({\r\n                    ...state,\r\n                    isAuthenticated: true,\r\n                    access: localStorage.getItem(\"access\"),\r\n                    refresh: localStorage.getItem(\"refresh\")\r\n                })\r\n            return ({\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            })\r\n        case LOGIN_FAILED:\r\n        case SIGNUP_FAILED:\r\n        case LOGOUT:\r\n            localStorage.removeItem(\"access\");\r\n            localStorage.removeItem(\"refresh\");\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAILED:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers} from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import {applyMiddleware, createStore} from \"redux\";\r\nimport { composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {};\r\n\r\nconst middelware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middelware))\r\n);\r\n\r\nexport default store;","import React, { useState, useEffect } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nfunction Chat({isAuthenticated}) {\r\n    if (!isAuthenticated) {\r\n        return <Navigate replace to=\"/chat_app/login\" />\r\n    }\r\n\r\n    const [socket, setSocket] = useState(null);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Get the username from local storage or prompt the user to enter it\r\n        const storedUsername = localStorage.getItem(\"username\");\r\n        if (storedUsername) {\r\n            setUsername(storedUsername);\r\n        } else {\r\n            const input = prompt(\"Enter your username:\");\r\n            if (input) {\r\n                setUsername(input);\r\n                localStorage.setItem(\"username\", input);\r\n            }\r\n        }\r\n        const request = `${localStorage.getItem(\"access\")}&54`;\r\n        // Connect to the WebSocket server with the username as a query parameter\r\n        const newSocket = new WebSocket(`ws://localhost:8000/ws/chat/${request}`);\r\n        setSocket(newSocket);\r\n\r\n        // Clean up the WebSocket connection when the component unmounts\r\n        return () => {\r\n            newSocket.close();\r\n        };\r\n    }, [username]);\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.onmessage = (event) => {\r\n                const data = JSON.parse(event.data);\r\n                setMessages((prevMessages) => [...prevMessages, data]);\r\n            };\r\n        }\r\n    }, [socket]);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (message && socket) {\r\n            const data = {\r\n                message: message,\r\n                username: username,\r\n            };\r\n            socket.send(JSON.stringify(data));\r\n            setMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">Chat</div>\r\n            <div className=\"message-container\">\r\n                {messages.map((message, index) => (\r\n                    <div key={index} className=\"message\">\r\n                        <div className=\"message-username\">{message.username}:</div>\r\n                        <div className=\"message-content\">{message.message}</div>\r\n                        <div className=\"message-timestamp\">{message.timestamp}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={message}\r\n                    onChange={(event) => setMessage(event.target.value)}\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, {})(Chat);","import axios from \"axios\";\r\nimport {USER_LOADED_FAIL, USER_LOADED_SUCCESS} from \"./types\";\r\n\r\n\r\nexport const create_new_conv = async (other_username) => {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `JWT ${localStorage.getItem(\"access\")}`,\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        let data = new FormData()\r\n        data.append(\"username\", other_username)\r\n        // const body = JSON.stringify({\"username\": \"test\"});\r\n\r\n        try {\r\n            await axios.post(`${process.env.REACT_APP_API_URL}/api/create-conv/`, data, config);\r\n        } catch (err) {\r\n        }\r\n};\r\n\r\nexport const fetch_conv = async (known_conv, set) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `JWT ${localStorage.getItem(\"access\")}`,\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    try {\r\n        let res = await axios.get(`${process.env.REACT_APP_API_URL}/api/query-conv/`, config);\r\n\r\n        if (res.data.conversations.length > known_conv.length) {\r\n            res.data.conversations.forEach((c) => {\r\n                if (!known_conv.find(c2 => c2.conv_id === c.conv_id)) {\r\n                    known_conv.push(c);\r\n                }\r\n            });\r\n\r\n        } else if (res.data.conversations.length < known_conv.length) {\r\n            known_conv.forEach(c => {\r\n                if (!res.data.conversations.find(c2 => c2.conv_id === c.conv_id))  {\r\n                    let index =  known_conv.indexOf(c);\r\n                    known_conv.splice(index, 1);\r\n                }\r\n            });\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n        return known_conv;\r\n    } catch (err) {\r\n        return known_conv;\r\n    }\r\n};\r\n\r\n\r\nexport const get_auto_complete = async (query) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/query-users/${query}`, config);\r\n        if (res.data)\r\n            return res.data.username_list;\r\n        return [\"\"]\r\n    } catch (err) {\r\n        return [\"empty\"];\r\n    }\r\n};\r\n\r\nexport const remove_conv = async (conv_id) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `JWT ${localStorage.getItem(\"access\")}`,\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    try {\r\n        await axios.get(`${process.env.REACT_APP_API_URL}/api/remove-conv/${conv_id}`, config);\r\n\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\nexport const get_messages = async (conv_id) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `JWT ${localStorage.getItem(\"access\")}`,\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/get-messages/${conv_id}`, config);\r\n        if (res.data.length === 0)\r\n            return null;\r\n        return res.data.messages;\r\n\r\n    } catch (err) {\r\n\r\n    }\r\n    return null;\r\n}","import React, { useState } from \"react\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {remove_conv} from \"../actions/queries\";\r\nimport \"./discussion.css\";\r\n\r\n\r\nconst Discussion = (props) => {\r\n    const deleteConv = (event) => {\r\n        event.stopPropagation();\r\n        props.onDelete(props.conv_id);\r\n    }\r\n\r\n    const cardClickHandler = () => {\r\n        props.onClick(props.conv_id);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={`card ${ props.selected ? \"selected-conv\" : \"\"}`} onClick={cardClickHandler} >\r\n            <div className=\"card-header card-header-layout\">\r\n                <div>{props.receiverName}</div>\r\n                <div className={\"inner-header\"}>\r\n                    <div>{props.timeStamp}</div>\r\n                    <button style={{zIndex: 10, position: \"relative\"}} type=\"button\" onClick={deleteConv} className=\"close close-style\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\">{props.lastMessageText? props.lastMessageText : \"New conversation\"}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Discussion;","import React, { useState } from \"react\";\r\nimport \"../css_src/message.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={`inner-message-container ${props.blue ? \"blue\" : \"\"}`}>\r\n            <div className={`message-header ${props.blue ? \"blue-header\": \"\"}`}>{props.username}</div>\r\n            <p className={\"message-content\"}>{props.content}</p>\r\n            <div className={\"time-stamp-text\"}>{props.timestamp}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Message;","\r\n\r\n\r\n// export const formatDate = (date) => {\r\n//     const currentDate = new Date();\r\n//     const targetDate = new Date(date);\r\n//\r\n//     if (currentDate.toDateString() === targetDate.toDateString()) {\r\n//         return targetDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false });\r\n//     } else {\r\n//         return targetDate.toLocaleDateString(\"fr-CH\");\r\n//     }\r\n// };\r\n\r\nexport const formatDate = (inputDate) => {\r\n    const currentDate = new Date();\r\n    const date = new Date(inputDate);\r\n\r\n    if (isSameDay(currentDate, date)) {\r\n        return formatTime(date);\r\n    } else if (isSameMonth(currentDate, date)) {\r\n        return formatDateAndMonth(date);\r\n    } else {\r\n        return formatDateMonthYear(date);\r\n    }\r\n}\r\n\r\nfunction isSameDay(date1, date2) {\r\n    return (\r\n        date1.getFullYear() === date2.getFullYear() &&\r\n        date1.getMonth() === date2.getMonth() &&\r\n        date1.getDate() === date2.getDate()\r\n    );\r\n}\r\n\r\nfunction isSameMonth(date1, date2) {\r\n    return (\r\n        date1.getFullYear() === date2.getFullYear() &&\r\n        date1.getMonth() === date2.getMonth()\r\n    );\r\n}\r\n\r\nfunction formatTime(date) {\r\n    const hours = date.getHours().toString().padStart(2, '0');\r\n    const minutes = date.getMinutes().toString().padStart(2, '0');\r\n    const seconds = date.getSeconds().toString().padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nfunction formatDateAndMonth(date) {\r\n    const day = date.getDate();\r\n    const month = date.toLocaleString('default', { month: 'long' });\r\n    return `${day} ${month}`;\r\n}\r\n\r\nfunction formatDateMonthYear(date) {\r\n    const day = date.getDate();\r\n    const month = date.toLocaleString('default', { month: 'long' });\r\n    const year = date.getFullYear();\r\n    return `${month} ${year}, ${day}`;\r\n}\r\n\r\nexport const getHour = (inputDate) => {\r\n    const date = new Date(inputDate);\r\n    const hour = date.getHours().toString().padStart(2, '0');\r\n    const minutes = date.getMinutes().toString().padStart(2, '0');\r\n    return hour + ':' + minutes;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {get_messages} from \"../actions/queries\";\r\nimport \"../css_src/chat_comp.css\"\r\nimport Message from \"./Message\";\r\nimport {getHour} from \"../utils/utils\";\r\n\r\nconst Chat = (props) => {\r\n\r\n    if (!props.conv_id) {\r\n        return (\r\n            <div>\r\n                <p>select a conversation</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const [socket, setSocket] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.close();\r\n            setSocket(null);\r\n            setMessages([])\r\n        }\r\n        // Get the username from local storage or prompt the user to enter it\r\n        const request = `${localStorage.getItem(\"access\")}&${props.conv_id}`;\r\n        // Connect to the WebSocket server with the username as a query parameter\r\n        const newSocket = new WebSocket(`ws://92.242.187.25/ws/chat/${request}`);\r\n        setSocket(newSocket);\r\n\r\n        // Clean up the WebSocket connection when the component unmounts\r\n        return () => {\r\n            newSocket.close();\r\n        };\r\n    }, [props.conv_id]);\r\n\r\n    const fetch_messages = async () => {\r\n        setMessage(\"\");\r\n        const messages_received = await get_messages(props.conv_id);\r\n        if (messages_received) {\r\n            messages_received.forEach((m) => {\r\n                setMessages((prevMessages) => [...prevMessages, m]);\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n           fetch_messages()\r\n            socket.onmessage = (event) => {\r\n                const data = JSON.parse(event.data);\r\n                setMessages((prevMessages) => [...prevMessages, data]);\r\n            };\r\n        }\r\n    }, [socket]);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (message!==\"\" && socket) {\r\n            console.log(message)\r\n            const data = {\r\n                message: message,\r\n                username: props.username,\r\n            };\r\n            socket.send(JSON.stringify(data));\r\n            setMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={\"inner-chat-container\"}>\r\n            <div className=\"chat-header\"><h4>{props.receivers}</h4></div>\r\n            <div>\r\n                <div className=\"message-container\">\r\n                    {messages.map((message, index) => (\r\n\r\n                        <div className={message.username === props.username ? \"message-right\": \"message-left\"}>\r\n                            <Message\r\n                                content={message.message}\r\n                                username={message.username}\r\n                                timestamp={getHour(message.timestamp)}\r\n                                blue={message.username === props.username}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <form className={\"message-bar\"} onSubmit={handleSubmit}>\r\n                    <input\r\n                        className={\"input-message\"}\r\n                        type=\"text\"\r\n                        placeholder=\"Type a message...\"\r\n                        value={message}\r\n                        onChange={(event) => setMessage(event.target.value)}\r\n                    />\r\n                    <button className={\"send-message-button\"} type=\"submit\"><img className={\"send-icon\"} src=\"/static/images/send.png\" alt=\"send-image\"/></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Discussion from \"../components/Discussion\";\r\nimport Chat from \"../components/Chat\"\r\nimport {formatDate} from \"../utils/utils\";\r\nimport {create_new_conv, fetch_conv, get_auto_complete, remove_conv} from \"../actions/queries\";\r\nimport {logout} from \"../actions/auth\";\r\nimport \"./chat_page.css\";\r\n\r\nfunction Chat2({username, isAuthenticated}) {\r\n    if (!isAuthenticated) {\r\n        return <Navigate replace to=\"chat_app/login\" />\r\n    }\r\n\r\n\r\n    const [conversations, setConversations] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [selectedConv, setSelectedConv] = useState(null);\r\n\r\n    // formatDate(\"2023-05-20T15:30:00\")\r\n\r\n    const fetchAutocompleteSuggestions = async () => {\r\n        const sugge = await get_auto_complete(query);\r\n        setSuggestions(sugge);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        const value = event.target.value;\r\n        setQuery(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (query) {\r\n            fetchAutocompleteSuggestions();\r\n        } else {\r\n            setSuggestions([]);\r\n        }\r\n    }, [query]);\r\n\r\n    const handleSuggestionClick = (suggestion) => {\r\n        setQuery(suggestion);\r\n        setSuggestions([]);\r\n    };\r\n\r\n    const onDiscClick = (conv_id) => {\r\n        setSelectedConv(conv_id);\r\n    };\r\n\r\n    useState(() => {\r\n\r\n    }, [selectedConv]);\r\n\r\n\r\n    const newConvEvent = async (e) => {\r\n        e.preventDefault();\r\n        create_new_conv(query);\r\n        // const temp_conv = [...conversations];\r\n        // const res = await fetch_conv(temp_conv, setConversations);\r\n        // setConversations(res);\r\n\r\n    };\r\n\r\n    const refresh = async () => {\r\n        const temp_conv = [...conversations];\r\n        const res = await fetch_conv(temp_conv, setConversations);\r\n        if (res)\r\n            setConversations(res);\r\n        else\r\n            setConversations([]);\r\n    }\r\n\r\n    const deleteConv = (conv_id) => {\r\n        remove_conv(conv_id);\r\n        if (selectedConv === conv_id)\r\n            setSelectedConv(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        refresh();\r\n        const interval = setInterval(async () => {\r\n\r\n            refresh();\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={\"main-container\"}>\r\n\r\n                <div className=\"sidebar\" >\r\n                    <div className={\"conv-container\"}>\r\n                        {conversations.map((d) =>(\r\n                            <Discussion\r\n                                key={d.conv_id}\r\n                                conv_id={d.conv_id}\r\n                                lastMessageText={d.lastMessage}\r\n                                receiverName={d.receivers}\r\n                                timeStamp={formatDate(d.timestamp)}\r\n                                onClick={onDiscClick}\r\n                                selected={selectedConv === d.conv_id}\r\n                                onDelete={deleteConv}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#exampleModal\">\r\n                        New Conversation\r\n                    </button>\r\n                </div>\r\n                <div className=\"chat-container\" >\r\n                     <Chat\r\n                        conv_id={selectedConv}\r\n                        username={username}\r\n                        receivers={conversations.find((c) => c.conv_id === selectedConv) ?\r\n                            conversations.find((c) => c.conv_id === selectedConv).receivers : \"\"}\r\n                     />\r\n\r\n                </div>\r\n\r\n                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Choose recipient</h5>\r\n                                <button type=\"button\" className=\"close close-button\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <form>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Recipient</label>\r\n                                        <input type=\"text\" onChange={handleInputChange} value={query} className=\"form-control\" id=\"exampleInputPassword1\" />\r\n                                        <ul className=\"list-group suggestion-list\">\r\n                                            {suggestions.map((suggestion) => (\r\n\r\n                                                    <li className=\"list-group-item auto-suggestion\" key={suggestion} onClick={() => handleSuggestionClick(suggestion)}>\r\n                                                        {suggestion}\r\n                                                    </li>\r\n\r\n\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                    <button type=\"submit\" onSubmit={refresh} onClick={newConvEvent} data-bs-dismiss=\"modal\" className=\"btn btn-primary\">Submit</button>\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    username: state.auth.user ? state.auth.user.first_name : null\r\n});\r\nexport default connect(mapStateToProps, {})(Chat2);","//API to handle audio recording\r\n\r\nexport const audioRecorder = {\r\n    /** Stores the recorded audio as Blob objects of audio data as the recording continues*/\r\n    audioBlobs: [],/*of type Blob[]*/\r\n    /** Stores the reference of the MediaRecorder instance that handles the MediaStream when recording starts*/\r\n    mediaRecorder: null, /*of type MediaRecorder*/\r\n    /** Stores the reference to the stream currently capturing the audio*/\r\n    streamBeingCaptured: null, /*of type MediaStream*/\r\n    /** Start recording the audio\r\n     * @returns {Promise} - returns a promise that resolves if audio recording successfully started\r\n     */\r\n    start: function () {\r\n        //Feature Detection\r\n        if (!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\r\n            //Feature is not supported in browser\r\n            //return a custom error\r\n            return Promise.reject(new Error('mediaDevices API or getUserMedia method is not supported in this browser.'));\r\n        }\r\n\r\n        else {\r\n            //Feature is supported in browser\r\n\r\n            //create an audio stream\r\n            return navigator.mediaDevices.getUserMedia({ audio: true }/*of type MediaStreamConstraints*/)\r\n                //returns a promise that resolves to the audio stream\r\n                .then(stream /*of type MediaStream*/ => {\r\n\r\n                    //save the reference of the stream to be able to stop it when necessary\r\n                    audioRecorder.streamBeingCaptured = stream;\r\n\r\n                    //create a media recorder instance by passing that stream into the MediaRecorder constructor\r\n                    audioRecorder.mediaRecorder = new MediaRecorder(stream); /*the MediaRecorder interface of the MediaStream Recording\r\n                    API provides functionality to easily record media*/\r\n\r\n                    //clear previously saved audio Blobs, if any\r\n                    audioRecorder.audioBlobs = [];\r\n\r\n                    //add a dataavailable event listener in order to store the audio data Blobs when recording\r\n                    audioRecorder.mediaRecorder.addEventListener(\"dataavailable\", event => {\r\n                        //store audio Blob object\r\n                        audioRecorder.audioBlobs.push(event.data);\r\n\r\n                        console.log(\"data pushed\");\r\n                        console.log(event.data);\r\n                    });\r\n\r\n                    //start the recording by calling the start method on the media recorder\r\n                    audioRecorder.mediaRecorder.start();\r\n                });\r\n\r\n            /* errors are not handled in the API because if its handled and the promise is chained, the .then after the catch will be executed*/\r\n        }\r\n    },\r\n    /** Stop the started audio recording\r\n     * @returns {Promise} - returns a promise that resolves to the audio as a blob file\r\n     */\r\n    stop: function () {\r\n        //return a promise that would return the blob or URL of the recording\r\n        return new Promise(resolve => {\r\n            //save audio type to pass to set the Blob type\r\n            let mimeType = audioRecorder.mediaRecorder.mimeType;\r\n\r\n            //listen to the stop event in order to create & return a single Blob object\r\n            audioRecorder.mediaRecorder.addEventListener(\"stop\", () => {\r\n                //create a single blob object, as we might have gathered a few Blob objects that needs to be joined as one\r\n                let audioBlob = new Blob(audioRecorder.audioBlobs, { type: mimeType });\r\n\r\n                //resolve promise with the single audio blob representing the recorded audio\r\n                resolve(audioBlob);\r\n            });\r\n            audioRecorder.cancel();\r\n        });\r\n    },\r\n    /** Cancel audio recording*/\r\n    cancel: function () {\r\n        //stop the recording feature\r\n        audioRecorder.mediaRecorder.stop();\r\n\r\n        //stop all the tracks on the active stream in order to stop the stream\r\n        audioRecorder.stopStream();\r\n\r\n        //reset API properties for next recording\r\n        audioRecorder.resetRecordingProperties();\r\n    },\r\n    /** Stop all the tracks on the active stream in order to stop the stream and remove\r\n     * the red flashing dot showing in the tab\r\n     */\r\n    stopStream: function () {\r\n        //stopping the capturing request by stopping all the tracks on the active stream\r\n        audioRecorder.streamBeingCaptured.getTracks() //get all tracks from the stream\r\n            .forEach(track /*of type MediaStreamTrack*/ => track.stop()); //stop each one\r\n    },\r\n    /** Reset all the recording properties including the media recorder and stream being captured*/\r\n    resetRecordingProperties: function () {\r\n        audioRecorder.mediaRecorder = null;\r\n        audioRecorder.streamBeingCaptured = null;\r\n\r\n        /*No need to remove event listeners attached to mediaRecorder as\r\n        If a DOM element which is removed is reference-free (no references pointing to it), the element itself is picked\r\n        up by the garbage collector as well as any event handlers/listeners associated with it.\r\n        getEventListeners(audioRecorder.mediaRecorder) will return an empty array of events.*/\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { verify } from \"../actions/auth\";\r\nimport {audioRecorder} from \"../components/AudioRecorder\";\r\n\r\n\r\nconst CallPage = () => {\r\n    const [verified, setVerified] = useState(false);\r\n    const {uid, token} = useParams();\r\n    const verify_account = e => {\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified) {\r\n        return <Navigate replace to=\"/chat_app\" />\r\n    }\r\n\r\n    var microphoneButton = document.getElementsByClassName(\"start-recording-button\")[0];\r\n    var recordingControlButtonsContainer = document.getElementsByClassName(\"recording-contorl-buttons-container\")[0];\r\n    var stopRecordingButton = document.getElementsByClassName(\"stop-recording-button\")[0];\r\n    var cancelRecordingButton = document.getElementsByClassName(\"cancel-recording-button\")[0];\r\n    var elapsedTimeTag = document.getElementsByClassName(\"elapsed-time\")[0];\r\n    var closeBrowserNotSupportedBoxButton = document.getElementsByClassName(\"close-browser-not-supported-box\")[0];\r\n    var overlay = document.getElementsByClassName(\"overlay\")[0];\r\n    var audioElement = document.getElementsByClassName(\"audio-element\")[0];\r\n    var audioElementSource = document.getElementsByClassName(\"audio-element\")[0]\r\n        .getElementsByTagName(\"source\")[0];\r\n    var textIndicatorOfAudiPlaying = document.getElementsByClassName(\"text-indication-of-audio-playing\")[0];\r\n\r\n//Listeners\r\n\r\n//Listen to start recording button\r\n    microphoneButton.onclick = startAudioRecording;\r\n\r\n//Listen to stop recording button\r\n    stopRecordingButton.onclick = stopAudioRecording;\r\n\r\n//Listen to cancel recording button\r\n    cancelRecordingButton.onclick = cancelAudioRecording;\r\n\r\n//Listen to when the ok button is clicked in the browser not supporting audio recording box\r\n    closeBrowserNotSupportedBoxButton.onclick = hideBrowserNotSupportedOverlay;\r\n\r\n//Listen to when the audio being played ends\r\n    audioElement.onended = hideTextIndicatorOfAudioPlaying;\r\n\r\n    /** Displays recording control buttons */\r\n    function handleDisplayingRecordingControlButtons() {\r\n        //Hide the microphone button that starts audio recording\r\n        microphoneButton.style.display = \"none\";\r\n\r\n        //Display the recording control buttons\r\n        recordingControlButtonsContainer.classList.remove(\"hide\");\r\n\r\n        //Handle the displaying of the elapsed recording time\r\n        handleElapsedRecordingTime();\r\n    }\r\n\r\n    /** Hide the displayed recording control buttons */\r\n    function handleHidingRecordingControlButtons() {\r\n        //Display the microphone button that starts audio recording\r\n        microphoneButton.style.display = \"block\";\r\n\r\n        //Hide the recording control buttons\r\n        recordingControlButtonsContainer.classList.add(\"hide\");\r\n\r\n        //stop interval that handles both time elapsed and the red dot\r\n        clearInterval(elapsedTimeTimer);\r\n    }\r\n\r\n    /** Displays browser not supported info box for the user*/\r\n    function displayBrowserNotSupportedOverlay() {\r\n        overlay.classList.remove(\"hide\");\r\n    }\r\n\r\n    /** Displays browser not supported info box for the user*/\r\n    function hideBrowserNotSupportedOverlay() {\r\n        overlay.classList.add(\"hide\");\r\n    }\r\n\r\n    /** Creates a source element for the the audio element in the HTML document*/\r\n    function createSourceForAudioElement() {\r\n        let sourceElement = document.createElement(\"source\");\r\n        audioElement.appendChild(sourceElement);\r\n\r\n        audioElementSource = sourceElement;\r\n    }\r\n\r\n    /** Display the text indicator of the audio being playing in the background */\r\n    function displayTextIndicatorOfAudioPlaying() {\r\n        textIndicatorOfAudiPlaying.classList.remove(\"hide\");\r\n    }\r\n\r\n    /** Hide the text indicator of the audio being playing in the background */\r\n    function hideTextIndicatorOfAudioPlaying() {\r\n        textIndicatorOfAudiPlaying.classList.add(\"hide\");\r\n    }\r\n\r\n//Controller\r\n\r\n    /** Stores the actual start time when an audio recording begins to take place to ensure elapsed time start time is accurate*/\r\n    var audioRecordStartTime;\r\n\r\n    /** Stores the maximum recording time in hours to stop recording once maximum recording hour has been reached */\r\n    var maximumRecordingTimeInHours = 1;\r\n\r\n    /** Stores the reference of the setInterval function that controls the timer in audio recording*/\r\n    var elapsedTimeTimer;\r\n\r\n    /** Starts the audio recording*/\r\n    function startAudioRecording() {\r\n\r\n        console.log(\"Recording Audio...\");\r\n\r\n        //If a previous audio recording is playing, pause it\r\n        let recorderAudioIsPlaying = !audioElement.paused; // the paused property tells whether the media element is paused or not\r\n        console.log(\"paused?\", !recorderAudioIsPlaying);\r\n        if (recorderAudioIsPlaying) {\r\n            audioElement.pause();\r\n            //also hide the audio playing indicator displayed on the screen\r\n            hideTextIndicatorOfAudioPlaying();\r\n        }\r\n\r\n        //start recording using the audio recording API\r\n        audioRecorder.start()\r\n            .then(() => { //on success\r\n\r\n                //store the recording start time to display the elapsed time according to it\r\n                audioRecordStartTime = new Date();\r\n\r\n                //display control buttons to offer the functionality of stop and cancel\r\n                handleDisplayingRecordingControlButtons();\r\n            })\r\n            .catch(error => { //on error\r\n                //No Browser Support Error\r\n                if (error.message.includes(\"mediaDevices API or getUserMedia method is not supported in this browser.\")) {\r\n                    console.log(\"To record audio, use browsers like Chrome and Firefox.\");\r\n                    displayBrowserNotSupportedOverlay();\r\n                }\r\n\r\n                //Error handling structure\r\n                switch (error.name) {\r\n                    case 'AbortError': //error from navigator.mediaDevices.getUserMedia\r\n                        console.log(\"An AbortError has occured.\");\r\n                        break;\r\n                    case 'NotAllowedError': //error from navigator.mediaDevices.getUserMedia\r\n                        console.log(\"A NotAllowedError has occured. User might have denied permission.\");\r\n                        break;\r\n                    case 'NotFoundError': //error from navigator.mediaDevices.getUserMedia\r\n                        console.log(\"A NotFoundError has occured.\");\r\n                        break;\r\n                    case 'NotReadableError': //error from navigator.mediaDevices.getUserMedia\r\n                        console.log(\"A NotReadableError has occured.\");\r\n                        break;\r\n                    case 'SecurityError': //error from navigator.mediaDevices.getUserMedia or from the MediaRecorder.start\r\n                        console.log(\"A SecurityError has occured.\");\r\n                        break;\r\n                    case 'TypeError': //error from navigator.mediaDevices.getUserMedia\r\n                        console.log(\"A TypeError has occured.\");\r\n                        break;\r\n                    case 'InvalidStateError': //error from the MediaRecorder.start\r\n                        console.log(\"An InvalidStateError has occured.\");\r\n                        break;\r\n                    case 'UnknownError': //error from the MediaRecorder.start\r\n                        console.log(\"An UnknownError has occured.\");\r\n                        break;\r\n                    default:\r\n                        console.log(\"An error occured with the error name \" + error.name);\r\n                };\r\n            });\r\n    }\r\n    /** Stop the currently started audio recording & sends it\r\n     */\r\n    function stopAudioRecording() {\r\n\r\n        console.log(\"Stopping Audio Recording...\");\r\n\r\n        //stop the recording using the audio recording API\r\n        audioRecorder.stop()\r\n            .then(audioAsblob => {\r\n                //Play recorder audio\r\n                playAudio(audioAsblob);\r\n\r\n                //hide recording control button & return record icon\r\n                handleHidingRecordingControlButtons();\r\n            })\r\n            .catch(error => {\r\n                //Error handling structure\r\n                switch (error.name) {\r\n                    case 'InvalidStateError': //error from the MediaRecorder.stop\r\n                        console.log(\"An InvalidStateError has occured.\");\r\n                        break;\r\n                    default:\r\n                        console.log(\"An error occured with the error name \" + error.name);\r\n                };\r\n            });\r\n    }\r\n\r\n    /** Cancel the currently started audio recording */\r\n    function cancelAudioRecording() {\r\n        console.log(\"Canceling audio...\");\r\n\r\n        //cancel the recording using the audio recording API\r\n        audioRecorder.cancel();\r\n\r\n        //hide recording control button & return record icon\r\n        handleHidingRecordingControlButtons();\r\n    }\r\n\r\n    /** Plays recorded audio using the audio element in the HTML document\r\n     * @param {Blob} recorderAudioAsBlob - recorded audio as a Blob Object\r\n     */\r\n    function playAudio(recorderAudioAsBlob) {\r\n\r\n        //read content of files (Blobs) asynchronously\r\n        let reader = new FileReader();\r\n\r\n        //once content has been read\r\n        reader.onload = (e) => {\r\n            //store the base64 URL that represents the URL of the recording audio\r\n            let base64URL = e.target.result;\r\n\r\n            //If this is the first audio playing, create a source element\r\n            //as pre populating the HTML with a source of empty src causes error\r\n            if (!audioElementSource) //if its not defined create it (happens first time only)\r\n                createSourceForAudioElement();\r\n\r\n            //set the audio element's source using the base64 URL\r\n            audioElementSource.src = base64URL;\r\n\r\n            //set the type of the audio element based on the recorded audio's Blob type\r\n            let BlobType = recorderAudioAsBlob.type.includes(\";\") ?\r\n                recorderAudioAsBlob.type.substr(0, recorderAudioAsBlob.type.indexOf(';')) : recorderAudioAsBlob.type;\r\n            audioElementSource.type = BlobType\r\n\r\n            //call the load method as it is used to update the audio element after changing the source or other settings\r\n            audioElement.load();\r\n\r\n            //play the audio after successfully setting new src and type that corresponds to the recorded audio\r\n            console.log(\"Playing audio...\");\r\n            audioElement.play();\r\n\r\n            //Display text indicator of having the audio play in the background\r\n            displayTextIndicatorOfAudioPlaying();\r\n        };\r\n\r\n        //read content and convert it to a URL (base64)\r\n        reader.readAsDataURL(recorderAudioAsBlob);\r\n    }\r\n\r\n    /** Computes the elapsed recording time since the moment the function is called in the format h:m:s*/\r\n    function handleElapsedRecordingTime() {\r\n        //display inital time when recording begins\r\n        displayElapsedTimeDuringAudioRecording(\"00:00\");\r\n\r\n        //create an interval that compute & displays elapsed time, as well as, animate red dot - every second\r\n        elapsedTimeTimer = setInterval(() => {\r\n            //compute the elapsed time every second\r\n            let elapsedTime = computeElapsedTime(audioRecordStartTime); //pass the actual record start time\r\n            //display the elapsed time\r\n            displayElapsedTimeDuringAudioRecording(elapsedTime);\r\n        }, 1000); //every second\r\n    }\r\n\r\n    /** Display elapsed time during audio recording\r\n     * @param {String} elapsedTime - elapsed time in the format mm:ss or hh:mm:ss\r\n     */\r\n    function displayElapsedTimeDuringAudioRecording(elapsedTime) {\r\n        //1. display the passed elapsed time as the elapsed time in the elapsedTime HTML element\r\n        elapsedTimeTag.innerHTML = elapsedTime;\r\n\r\n        //2. Stop the recording when the max number of hours is reached\r\n        if (elapsedTimeReachedMaximumNumberOfHours(elapsedTime)) {\r\n            stopAudioRecording();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {String} elapsedTime - elapsed time in the format mm:ss or hh:mm:ss\r\n     * @returns {Boolean} whether the elapsed time reached the maximum number of hours or not\r\n     */\r\n    function elapsedTimeReachedMaximumNumberOfHours(elapsedTime) {\r\n        //Split the elapsed time by the symbo :\r\n        let elapsedTimeSplitted = elapsedTime.split(\":\");\r\n\r\n        //Turn the maximum recording time in hours to a string and pad it with zero if less than 10\r\n        let maximumRecordingTimeInHoursAsString = maximumRecordingTimeInHours < 10 ? \"0\" + maximumRecordingTimeInHours : maximumRecordingTimeInHours.toString();\r\n\r\n        //if it the elapsed time reach hours and also reach the maximum recording time in hours return true\r\n        if (elapsedTimeSplitted.length === 3 && elapsedTimeSplitted[0] === maximumRecordingTimeInHoursAsString)\r\n            return true;\r\n        else //otherwise, return false\r\n            return false;\r\n    }\r\n\r\n    /** Computes the elapsedTime since the moment the function is called in the format mm:ss or hh:mm:ss\r\n     * @param {String} startTime - start time to compute the elapsed time since\r\n     * @returns {String} elapsed time in mm:ss format or hh:mm:ss format, if elapsed hours are 0.\r\n     */\r\n    function computeElapsedTime(startTime) {\r\n        //record end time\r\n        let endTime = new Date();\r\n\r\n        //time difference in ms\r\n        let timeDiff = endTime - startTime;\r\n\r\n        //convert time difference from ms to seconds\r\n        timeDiff = timeDiff / 1000;\r\n\r\n        //extract integer seconds that dont form a minute using %\r\n        let seconds = Math.floor(timeDiff % 60); //ignoring uncomplete seconds (floor)\r\n\r\n        //pad seconds with a zero if neccessary\r\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n        //convert time difference from seconds to minutes using %\r\n        timeDiff = Math.floor(timeDiff / 60);\r\n\r\n        //extract integer minutes that don't form an hour using %\r\n        let minutes = timeDiff % 60; //no need to floor possible incomplete minutes, becase they've been handled as seconds\r\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n\r\n        //convert time difference from minutes to hours\r\n        timeDiff = Math.floor(timeDiff / 60);\r\n\r\n        //extract integer hours that don't form a day using %\r\n        let hours = timeDiff % 24; //no need to floor possible incomplete hours, becase they've been handled as seconds\r\n\r\n        //convert time difference from hours to days\r\n        timeDiff = Math.floor(timeDiff / 24);\r\n\r\n        // the rest of timeDiff is number of days\r\n        let days = timeDiff; //add days to hours\r\n\r\n        let totalHours = hours + (days * 24);\r\n        totalHours = totalHours < 10 ? \"0\" + totalHours : totalHours;\r\n\r\n        if (totalHours === \"00\") {\r\n            return minutes + \":\" + seconds;\r\n        } else {\r\n            return totalHours + \":\" + minutes + \":\" + seconds;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"audio-recording-container\">\r\n                <h1 className=\"title\">Audio Recording API Demo</h1>\r\n                <i className=\"start-recording-button fa fa-microphone\" aria-hidden=\"true\"></i>\r\n                <div className=\"recording-contorl-buttons-container hide\">\r\n                    <i className=\"cancel-recording-button fa fa-times-circle-o\" aria-hidden=\"true\"></i>\r\n                    <div className=\"recording-elapsed-time\">\r\n                        <i className=\"red-recording-dot fa fa-circle\" aria-hidden=\"true\"></i>\r\n                        <p className=\"elapsed-time\"></p>\r\n                    </div>\r\n                    <i className=\"stop-recording-button fa fa-stop-circle-o\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"text-indication-of-audio-playing-container\">\r\n                    <p className=\"text-indication-of-audio-playing hide\">Audio is\r\n                        playing<span>.</span><span>.</span><span>.</span></p>\r\n                </div>\r\n            </div>\r\n            <div className=\"overlay hide\">\r\n                <div className=\"browser-not-supporting-audio-recording-box\">\r\n                    <p>To record audio, use browsers like Chrome and Firefox that support audio recording.</p>\r\n                    <button type=\"button\" className=\"close-browser-not-supported-box\">Ok.</button>\r\n                </div>\r\n            </div>\r\n\r\n            <audio controls className=\"audio-element hide\">\r\n            </audio>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default connect(null, {})(CallPage);","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\r\n\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport Signup from \"./containers/Signup\";\r\nimport Activate from \"./containers/Activate\";\r\nimport ResetPassword from \"./containers/ResetPassword\";\r\nimport ResetPasswordConfirm from \"./containers/ResetPasswordConfirm\";\r\nimport Layout from \"./hocs/Layout\";\r\n\r\nimport { Provider} from \"react-redux\";\r\nimport store from \"./store\";\r\nimport Chat from \"./containers/Chat\";\r\nimport Chat2 from \"./containers/Chat2\";\r\nimport CallPage from \"./containers/CallPage\";\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Routes>\r\n                    <Route path='/chat_app/' element={<Home />}/>\r\n                    <Route path='/chat_app/login' element={<Login />}/>\r\n                    <Route path='/chat_app/signup' element={<Signup />}/>\r\n                    <Route path='/chat_app/reset-password' element={<ResetPassword />}/>\r\n                    <Route path='/chat_app/password/reset/confirm/:uid/:token' element={<ResetPasswordConfirm />}/>\r\n                    <Route path='/chat_app/activate/:uid/:token' element={<Activate />}/>\r\n                    <Route path=\"/chat_app/chat\" element={<Chat />} />\r\n                    <Route path=\"/chat_app/chat2\" element={<Chat2 />} />\r\n                    <Route path=\"/chat_app/call\" element={<CallPage />} />\r\n                </Routes>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n\r\n);\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}